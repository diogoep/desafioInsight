{"ast":null,"code":"import _classCallCheck from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/src/component/UserComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport UserDataService from '../service/UserDataService';\nimport Select from 'react-select'; //import PhoneInput from 'react-phone-number-input'\n//const INSTRUCTOR = 'in28minutes'\n\nvar UserComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserComponent, _Component);\n\n  function UserComponent(props) {\n    var _this;\n\n    _classCallCheck(this, UserComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserComponent).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      nome: '',\n      endereco: '',\n      email: '',\n      telefone: '',\n      password: '',\n      papeis: []\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.handleChange = this.handleChange.bind(this);\n\n    return _this;\n  }\n\n  _createClass(UserComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // eslint-disable-next-line\n      if (this.state.id == -1) {\n        return;\n      }\n\n      UserDataService.retrieveUser(this.state.id).then(function (response) {\n        return _this2.setState({\n          nome: response.data.nome,\n          endereco: response.data.endereco,\n          email: response.data.email,\n          telefone: response.data.telefone,\n          password: response.data.password\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.nome) {\n        errors.nome = 'Enter a name';\n      }\n\n      if (!values.endereco) {\n        errors.endereco = 'Enter a address';\n      }\n\n      if (!values.email) {\n        errors.email = 'Enter a email';\n      }\n\n      if (!values.telefone) {\n        errors.telefone = 'Enter a phone number';\n      }\n\n      if (!values.password) {\n        errors.password = 'Enter a email';\n      }\n\n      return errors;\n    }\n    /*\n    handleChange(event) {\n        this.setState({papeis: event.target.papeis});\n    }*/\n\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      //console.log(papeis);\n      var user = {\n        id: this.state.id,\n        nome: values.nome,\n        endereco: values.endereco,\n        email: values.email,\n        telefone: values.telefone,\n        password: values.password,\n        papeis: [],\n        targetDate: values.targetDate\n      };\n      user.papeis.push(this.role.value);\n      console.log(user.papeis); // eslint-disable-next-line\n\n      if (this.state.id == -1) {\n        UserDataService.createUser(user).then(function () {\n          return _this3.props.history.push('/users');\n        });\n      } else {\n        UserDataService.updateUser(this.state.id, user).then(function () {\n          return _this3.props.history.push('/users');\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var roles = [{\n        value: 'ADMIN',\n        label: 'Administrador'\n      }, {\n        value: \"ESTUDANTE\",\n        label: \"Estudante\"\n      }]; //const [selectedValue, setSelectedValue] = roles;\n\n      var handleChange = function handleChange(e) {\n        _this4.role = e;\n        console.log(_this4.role); //setSelectedValue(e.value);\n\n        return e.value;\n      };\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          nome = _this$state.nome,\n          endereco = _this$state.endereco,\n          email = _this$state.email,\n          telefone = _this$state.telefone,\n          password = _this$state.password,\n          papeis = _this$state.papeis;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"User\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          id: id,\n          nome: nome,\n          endereco: endereco,\n          email: email,\n          telefone: telefone,\n          password: password,\n          papeis: papeis\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Id\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"id\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Name\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"nome\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"Password\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Role\"), React.createElement(Select, {\n          options: roles,\n          value: roles.find(function (obj) {\n            return obj.value;\n          }) // set selected value// set list of the data\n          ,\n          onChange: handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Address\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"endereco\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Email\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"email\",\n          name: \"email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"Phone Number\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"tel\",\n          name: \"telefone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Save\"));\n      })));\n    }\n  }]);\n\n  return UserComponent;\n}(Component);\n\nexport default UserComponent;","map":{"version":3,"sources":["/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/src/component/UserComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","UserDataService","Select","UserComponent","props","state","id","match","params","nome","endereco","email","telefone","password","papeis","onSubmit","bind","validate","retrieveUser","then","response","setState","data","values","errors","user","targetDate","push","role","value","console","log","createUser","history","updateUser","roles","label","handleChange","e","find","obj"],"mappings":"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","sourcesContent":["import React, { Component} from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport UserDataService from '../service/UserDataService';\nimport Select from 'react-select'\n//import PhoneInput from 'react-phone-number-input'\n\n//const INSTRUCTOR = 'in28minutes'\n\nclass UserComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            nome: '',\n            endereco: '',\n            email: '',\n            telefone: '',\n            password:'',\n            papeis: []\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n       // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        UserDataService.retrieveUser(this.state.id)\n            .then(response => this.setState({\n                nome: response.data.nome,\n                endereco: response.data.endereco,\n                email: response.data.email,\n                telefone: response.data.telefone,\n                password: response.data.password\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.nome) {\n            errors.nome = 'Enter a name'\n        }\n        if (!values.endereco) {\n            errors.endereco = 'Enter a address'\n        }\n        if (!values.email) {\n            errors.email = 'Enter a email'\n        }\n        if (!values.telefone) {\n            errors.telefone = 'Enter a phone number'\n        }\n        if (!values.password) {\n            errors.password = 'Enter a email'\n        }\n\n        return errors\n\n    } \n    /*\n    handleChange(event) {\n        this.setState({papeis: event.target.papeis});\n    }*/\n\n    onSubmit(values) {\n        //console.log(papeis);\n        \n        let user = {\n            id: this.state.id,\n            nome: values.nome,\n            endereco : values.endereco,\n            email: values.email,\n            telefone: values.telefone,\n            password: values.password,\n            papeis:[],\n            targetDate: values.targetDate\n        }\n        \n        user.papeis.push(this.role.value);\n        console.log(user.papeis);\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            UserDataService.createUser(user)\n                .then(() => this.props.history.push('/users'))\n        } else {\n            UserDataService.updateUser(this.state.id, user)\n                .then(() => this.props.history.push('/users'))\n        }\n\n    }\n    \n    render() {\n        const roles = [{ value: 'ADMIN', label: 'Administrador'}, {value: \"ESTUDANTE\", label: \"Estudante\"}] \n        //const [selectedValue, setSelectedValue] = roles;\n        var handleChange = e => {\n            this.role=e;\n            console.log(this.role);\n            //setSelectedValue(e.value);\n            return e.value;\n          }\n          \n        let { id, nome, endereco, email, telefone, password, papeis } = this.state\n\n        return (\n            <div>\n                <h3>User</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, nome, endereco, email, telefone, password, papeis }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Name</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"nome\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Password</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"password\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Role</label>\n                                        <Select options={roles} \n                                            value={roles.find(obj => obj.value)} // set selected value// set list of the data\n                                            onChange={handleChange}/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Address</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"endereco\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Email</label>\n                                        <Field className=\"form-control\" type=\"email\" name=\"email\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Phone Number</label>\n                                        <Field className=\"form-control\" type=\"tel\" name=\"telefone\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserComponent"]},"metadata":{},"sourceType":"module"}