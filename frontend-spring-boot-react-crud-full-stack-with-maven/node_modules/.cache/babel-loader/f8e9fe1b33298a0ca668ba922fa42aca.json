{"ast":null,"code":"import _classCallCheck from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios'; //const INSTRUCTOR = 'in28minutes'\n\nvar COURSE_API_URL = 'http://localhost:8080'; //const INSTRUCTOR_API_URL = `${COURSE_API_URL}/instructors/${INSTRUCTOR}`\n\nvar CourseDataService =\n/*#__PURE__*/\nfunction () {\n  function CourseDataService() {\n    _classCallCheck(this, CourseDataService);\n  }\n\n  _createClass(CourseDataService, [{\n    key: \"retrieveAllCourses\",\n    value: function retrieveAllCourses() {\n      //console.log('executed service')\n      return axios.get(\"\".concat(COURSE_API_URL, \"/courses\"));\n    }\n  }, {\n    key: \"retrieveCourse\",\n    value: function retrieveCourse(id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(COURSE_API_URL, \"/courses/\").concat(id));\n    }\n  }, {\n    key: \"deleteCourse\",\n    value: function deleteCourse(id) {\n      //console.log('executed service')\n      return axios.delete(\"\".concat(COURSE_API_URL, \"/courses/\").concat(id));\n    }\n  }, {\n    key: \"updateCourse\",\n    value: function updateCourse(name, id, course) {\n      //console.log('executed service')\n      return axios.put(\"\".concat(COURSE_API_URL, \"/courses/\").concat(id), course);\n    }\n  }, {\n    key: \"createCourse\",\n    value: function createCourse(name, course) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(COURSE_API_URL, \"/courses/\"), course);\n    }\n  }, {\n    key: \"retrieveAllUsers\",\n    value: function retrieveAllUsers(id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(COURSE_API_URL, \"/courses/\").concat(id, \"/addUser\"));\n    }\n  }, {\n    key: \"retrieveUsersNotOnCourse\",\n    value: function retrieveUsersNotOnCourse(id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(COURSE_API_URL, \"/courses/\").concat(id, \"/getUsers\"));\n    }\n  }, {\n    key: \"addUser\",\n    value: function addUser(id, idUser) {\n      //console.log('executed service')\n      return axios.put(\"\".concat(COURSE_API_URL, \"/courses/\").concat(id, \"/addUser/\").concat(idUser));\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(id, idUser) {\n      //console.log('executed service')\n      return axios.delete(\"\".concat(COURSE_API_URL, \"/courses/\").concat(id, \"/addUser/\").concat(idUser));\n    }\n  }]);\n\n  return CourseDataService;\n}();\n\nexport default new CourseDataService();","map":{"version":3,"sources":["/home/home/diogo/Documentos/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/src/service/CourseDataService.js"],"names":["axios","COURSE_API_URL","CourseDataService","get","id","delete","name","course","put","post","idUser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,cAAc,GAAG,uBAAvB,C,CACA;;IAEMC,iB;;;;;;;;;yCAEmB;AACjB;AACA,aAAOF,KAAK,CAACG,GAAN,WAAaF,cAAb,cAAP;AACH;;;mCAEcG,E,EAAI;AACf;AACA,aAAOJ,KAAK,CAACG,GAAN,WAAaF,cAAb,sBAAuCG,EAAvC,EAAP;AACH;;;iCAEYA,E,EAAI;AACb;AACA,aAAOJ,KAAK,CAACK,MAAN,WAAgBJ,cAAhB,sBAA0CG,EAA1C,EAAP;AACH;;;iCAEYE,I,EAAMF,E,EAAIG,M,EAAQ;AAC3B;AACA,aAAOP,KAAK,CAACQ,GAAN,WAAaP,cAAb,sBAAuCG,EAAvC,GAA6CG,MAA7C,CAAP;AACH;;;iCAEYD,I,EAAMC,M,EAAQ;AACvB;AACA,aAAOP,KAAK,CAACS,IAAN,WAAcR,cAAd,gBAAyCM,MAAzC,CAAP;AACH;;;qCAEgBH,E,EAAI;AACjB;AACA,aAAOJ,KAAK,CAACG,GAAN,WAAaF,cAAb,sBAAuCG,EAAvC,cAAP;AACH;;;6CAEwBA,E,EAAI;AACzB;AACA,aAAOJ,KAAK,CAACG,GAAN,WAAaF,cAAb,sBAAuCG,EAAvC,eAAP;AACH;;;4BAEOA,E,EAAIM,M,EAAQ;AAChB;AACA,aAAOV,KAAK,CAACQ,GAAN,WAAaP,cAAb,sBAAuCG,EAAvC,sBAAqDM,MAArD,EAAP;AACH;;;+BAEUN,E,EAAIM,M,EAAQ;AACnB;AACA,aAAOV,KAAK,CAACK,MAAN,WAAgBJ,cAAhB,sBAA0CG,EAA1C,sBAAwDM,MAAxD,EAAP;AACH;;;;;;AAKL,eAAe,IAAIR,iBAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\n//const INSTRUCTOR = 'in28minutes'\nconst COURSE_API_URL = 'http://localhost:8080'\n//const INSTRUCTOR_API_URL = `${COURSE_API_URL}/instructors/${INSTRUCTOR}`\n\nclass CourseDataService {\n\n    retrieveAllCourses() {\n        //console.log('executed service')\n        return axios.get(`${COURSE_API_URL}/courses`);\n    }\n\n    retrieveCourse(id) {\n        //console.log('executed service')\n        return axios.get(`${COURSE_API_URL}/courses/${id}`);\n    }\n\n    deleteCourse(id) {\n        //console.log('executed service')\n        return axios.delete(`${COURSE_API_URL}/courses/${id}`);\n    }\n\n    updateCourse(name, id, course) {\n        //console.log('executed service')\n        return axios.put(`${COURSE_API_URL}/courses/${id}`, course);\n    }\n\n    createCourse(name, course) {\n        //console.log('executed service')\n        return axios.post(`${COURSE_API_URL}/courses/`, course);\n    }\n\n    retrieveAllUsers(id) {\n        //console.log('executed service')\n        return axios.get(`${COURSE_API_URL}/courses/${id}/addUser`);\n    }\n\n    retrieveUsersNotOnCourse(id) {\n        //console.log('executed service')\n        return axios.get(`${COURSE_API_URL}/courses/${id}/getUsers`);\n    }\n\n    addUser(id, idUser) {\n        //console.log('executed service')\n        return axios.put(`${COURSE_API_URL}/courses/${id}/addUser/${idUser}`);\n    }\n    \n    deleteUser(id, idUser) {\n        //console.log('executed service')\n        return axios.delete(`${COURSE_API_URL}/courses/${id}/addUser/${idUser}`);\n    }\n}\n\n\n\nexport default new CourseDataService()"]},"metadata":{},"sourceType":"module"}